c
@event.save!
@event.dogs << Dog.where(:id => "1")
@event.save!
@event.dogs.clear
@event.dogs << Dog.where(:id => "")
@event.dogs.length
@event.dogs << Dog.where(:id => "")
Dog.where(:id => "")
params["event"]["dogs"].count
@event.dogs.length
@event.dogs.count
@event.dogs.first
@event.dogs
    @event.dogs << params["event"]["dogs"].map { |id| Dog.where(:id => id) }
params["event"]["dogs"]
@current_user.dogs
@event.save!
@event.dogs
@event.dogs.clear
@event.dogs
@event.save
@event
c
@event.save!
@event.dogs.length
@event.dogs
@event.dogs.count
Dog.find(2)
Dog.all.count
Dogs.all.count
@event.dogs
@event.dog
c
@event.errors
n
c
@event.save!
@event.save
c
@event.dogs
@event.save!
@event.dogs
@event
c
params
@event.dogs
@event
@event.save!
@event.save
n
@event
n
@event
n
@event.save
Event.new(params_hash)
params_hash
parmas_hash
c
self.filled ||= false
self.filled
c
a ||= false
a = false
@event.update_attributes!({:filled => false})
@event.update_attributes!({:filled => true})
@event.update_attributes!({:filled => false})
@event.update_attributes({:filled => false})
@event.update_attributes!(params_hash)
c
attributes
c
params["event"]
params["events"]
c
params_hash
c
n
c
r
n
s
q
args
attrs
n
@values[:mix]
c
q
c
q
x
exception
n
@values[:mix] = [[]]
dog_attributes['mixes'].split(',')
dog_attributes['mixes']
dog_attributes
@values
@value
q
page.find("option[value='#{year}']").click
page.find("option[value=#{year}]").click
q
find("option[value='2010']")
find('#dobdob')
find('#dob').set(year)
find('#dob')
q
c
q
path_to(page_name)
page_name
c
page_name
c
page_name
c
path_name
path_to("the dogs page")
path_to(pn)
pn = "the users page for \"Batman\"#dogs"
pn = "the dogs page for \"Batman\"#dogs"
path_to(pn)
path_to(page_name)
pn = "the dogs page for \"Batman\""
page_name
c
dog_params
c
@params["dog"]
@params["dogs"]
@params
c
q
params
dog_attributes['mixes']
dog_attributes
@values
q
@values
@values[:like]
@values[:personality]
dog_attributes
c
@form_filler.attributes_list(dog_params)
dog_params
@dog
@dog.dog_params
dogs_params
list = @form_filler.attributes_list(dogs_params))
n
@dog
n
params[:id]
params
@dog
c
get :update, @params["dog"]
@params["dog"]
@params[:dog]
@params[dog]
@params[:params]
@params
:update
get :update, @params
@params
q
User.create
User.create(:id => 1)
c
q
@zipcodes
n
@dogs.count
@dogs
n
Dog.near(criteria[:zipcode], criteria[:radius])
q
@dogs.to_a
@dogs.longitude
@dogs.distance
Dog.near(criteria[:zipcode], criteria[:radius], order: :distance)
@dogs.as_json
@dogs.to_hash
@dogs
Dog.all.filter_by @form_filler.values.count
Dog.all.filter_by @form_filler.values
Dog.all.filter_by
Dog.all.collect { |dog| dog.address }
Dog.all.count
@dogs.all.count
@dogs
q
DogsController.any_instance
DogsController.any_instance.stub(:get_ip_address_zipcode).and_return(zip)
DogsController.any_instance.stub(:get_ip_address_zipcode)
q
DogsController.any_instance.stub(:get_ip_address_zipcode)
q
params
q
@dog.delete
@dog.remove
q
c
n
args
n
s3_client.config[:region]
s3_client
n
q
  allow(Aws::S3::Client).to receive(:new).and_return(s3_client)
s3_client
config
config.exists?
config == null
Aws.config[:region]
s3_client.config[:region]
s3_client = Aws::S3::Client.new(stub_responses: true)
Aws::S3::Client.new.list_buckets
    list_buckets: { buckets: [ { name: ‘your_bucket’ } ] }
  stub_responses: {
Aws.config[:s3] = {
Aws.config[:region]
n
client = Aws::S3::Client.new(stub_responses: true)
n
q
@dog
@dog.photo.exists?
s3.stub_data(:list_buckets, buckets:[{name:'aws-sdk'}])
s3.stub_data(:list_buckets, buckets:[{name:'aws-sdk', region: 'us-west-2'}])
s3 = Aws::S3::Client.new(stub_responses: true)
s3_client = Aws::S3::Client.new(stub_responses: true)
c
q
@dog.photo.exists?
Aws.config.update(stub_responses: true)
@dog.photo.exists?
Aws.config.update(stub_responses: true)
@dog.photo.exists?
ENV['AWS_REGION'] = 'us-west-2'
s3 = AWS::S3.new
require 'aws-sdk'
require 'aws-sdk;
s3 = AWS::S3.new
@dog.photo.exists?
@dog.photo.remove
@dog.photo.destroy!
@dog.photo.destroy
n
@dog.photo
c
